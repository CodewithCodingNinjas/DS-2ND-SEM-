#include <stdio.h>
#define SIZE 5 // Size of the circular queue
int queue[SIZE];
int FRONT = -1;
int REAR = -1;
// Check if the queue is full
int isFull() {
    if ((FRONT == 0 && REAR == SIZE - 1) || (FRONT == REAR + 1))
        return 1;
    return 0;
}
// Check if the queue is empty
int isEmpty() {
    if (FRONT == -1)
        return 1;
    return 0;
}
// Enqueue operation
void enqueue(int data) {
    if (isFull())
        printf("The circular queue is full.\n");
    else {
        if (FRONT == -1)
            FRONT = 0;
        REAR = (REAR + 1) % SIZE;
        queue[REAR] = data;
        printf("Enqueued: %d\n", data);
    }
}
// Dequeue operation
int dequeue() {
    int temp;
    if (isEmpty()) {
        printf("The circular queue is empty.\n");
        return -1; // Return a sentinel value
    } else {
        temp = queue[FRONT];
        if (FRONT == REAR) {
            FRONT = -1;
            REAR = -1;
        } else
            FRONT = (FRONT + 1) % SIZE;
        printf("Dequeued: %d\n", temp);
        return temp;
    }
}
// Display the current queue
void displayQueue() {
    if (isEmpty())
        printf("No elements in the circular queue.\n");
    else {
        printf("Current Circular Queue: ");
        int i = FRONT;
        while (i != REAR) {
            printf("%d ", queue[i]);
            i = (i + 1) % SIZE;
        }
        printf("%d\n", queue[REAR]);
    }
}
int main() {
    int choice, data;
    while (1) {
        printf("\nCircular Queue Operations:\n");
        printf("1. Enqueue     2. Dequeue     3. Display Queue     4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1:
                printf("Enter data to enqueue: ");
                scanf("%d", &data);
                enqueue(data);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                displayQueue();
                break;
            case 4:
                printf("Exiting the program.\n");
                return 0;
            default:
                printf("Invalid choice. Try again.\n");
        }
    }
    return 0;
}
